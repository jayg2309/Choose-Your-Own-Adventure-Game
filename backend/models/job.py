# job - intent to make a story
# like in progress, completed

# flow of a job and why to use it
# frontend -> req job
# backend -> sends job
# frontend-> asks if job is done
# backend-> reports status

# if job is done, backend can send story 

from sqlalchemy  import Column, Integer, String, DateTime

from sqlalchemy.sql import func
from sqlalchemy.orm import relationship
from backend.db.database import Base

class StoryJob(Base):
    __tablename__="story_jobs"

    id=Column(Integer,primary_key=True,index=True)
    job_id=Column(String,index=True,unique=True)
    session_id=Column(String,index=True)
    theme=Column(String)
    status=Column(String)
    story_id=Column(Integer,nullable=True) # store the story id generated by this job
    error=Column(String,nullable=True) # nullable -> can have no value, null or empty
    created_at= Column(DateTime(timezone=True),server_default=func.now())
    completed_at= Column(DateTime(timezone=True),nullable=True) # can be null if not completed yet